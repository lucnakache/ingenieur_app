{
    "collab_server" : "",
    "contents" : "# config\n\n# load relevant rds\nfilename = \"bigds.rds\"\nbigds = readRDS(file = filename)\nbigds$annee = as.numeric(bigds$annee)\nfilename = \"france_region_polygone.rds\"\nfrance_region_polygone = readRDS(file = filename)\nfilename = \"ingenieur_data_df.rds\"\ningenieur_df = readRDS(file = filename)\ningenieur_df$year = as.numeric(levels(ingenieur_df$year))[ingenieur_df$year]\n\n\n# Calcul des barycentres des shapes\ncentroids_df = as.data.frame(centroid(france_region_polygone))\nnames(centroids_df) = c(\"long\",\"lat\")\nfrance_region_polygone@data = cbind(france_region_polygone@data,centroids_df)\n\n# la basemap de l'onglet cartographie\nbasemap = leaflet(france_region_polygone) %>%\n  addPolygons(\n    color = \"black\",\n    weight = 2,\n    smoothFactor = 1,\n    opacity = 0.8,\n    fillOpacity = 0.2,\n    layerId = ~OBJECTID,\n    highlightOptions = highlightOptions(color = \"white\",\n                                        weight = 2,\n                                        bringToFront = TRUE))\n\n# Toutes les annees\nconfig_year_vector = unique(bigds$annee)\n\n# Tailles des promo\nconfig_taille_promo_df = as.data.frame(table(ingenieur_df$year))\nnames(config_taille_promo_df) = c(\"year\",\"taille\")\n\n# Le nombre de pays/regions\nconfig_taille_pays = sapply(config_year_vector,function(annee){\n  length(bigds$NAME_0[bigds$annee==annee])\n})\n\n# Les variables d'Ã©tude\nconfig_variable = c(\"domaine\",\"recompense\")\n\n# les modalites\nconfig_modalite = lapply(config_variable,function(x){\n  idx = str_detect(string = names(bigds),pattern = paste0(\"f\",x))\n  resultat = names(bigds)[idx]\n  names(resultat) = gsub(pattern =paste0(\"f\",x,\"_\") ,replacement = \"\",x = resultat,fixed = TRUE)\n  return(resultat)\n})\nnames(config_modalite) = config_variable\n\n\n\n# Toutes les palettes\npalette_brewer = row.names(brewer.pal.info[brewer.pal.info$category == \"qual\",])\npalette_viridis = c(\"viridis\", \"magma\", \"inferno\", \"plasma\")\nconfig_palette = c(palette_brewer,palette_viridis)\n\n# fonction qui convertir un dataframe popupdata en arbitrary html\n# df_to_html = function(popup_data){\n#   f2 = as.vector(t(popup_data[1,]))\n#   f1 = colnames(popup_data)\n#   res = paste0(\"<br/>\",paste(paste(f1,f2,sep = \":\"),collapse = \"<br/>\"))\n#   return (res)\n# }\n\n\ndf_to_html = function(popup_data,\n                      palette_temporaire,\n                      REGION_NAME,\n                      ANNEE_NAME){\n  f2 = as.vector(t(popup_data[1,]))\n  f1 = colnames(popup_data)\n  f1 = gsub(pattern =paste0(\"f\",\"domaine\",\"_\") ,replacement =\"\",x = f1,fixed = TRUE)\n  f1 = paste0(\"<B>\",f1,\"</B>\")\n  f1 = paste0(\"<FONT COLOR='\",palette_temporaire,\"'>\",f1,\"</FONT>\")\n  res = paste0(\"<br/>\",paste(paste(f1,f2,sep = \" : \"),collapse = \"<br/>\"))\n  to_add = paste0(\"<br/>\",REGION_NAME,\", \",ANNEE_NAME)\n  res = paste0(to_add,res)\n  return (res)\n}\n\n\n\n# fonction qui valule une serie pr plottert du hc\nfun_compute_serie_for_plot = function(temp_ds,palette_temp){\n  series=list()\n  variable_name = names(temp_ds)\n  for (i in seq(1:ncol(temp_ds))){\n    series[[i]]=list(name=variable_name[i],\n                     color=palette_temp[i],\n                     data=temp_ds[,i])\n  }\n  return(series)\n}\n\n# fonction qui compute une serie pour le plot 2 de l'onglet 3 hc\nfun_compute_serie_for_plot_2 = function(palette_temp,keep_col,inp_var){\n  \n  temp_ds = bigds[,c(keep_col,\"annee\")]\n  \n  temp_ds = temp_ds %>%\n    group_by(annee) %>%\n    summarise_all(funs(sum))\n  temp_ds$annee = NULL\n  \n  \n  series=list()\n  variable_name = names(temp_ds)\n  for (i in seq(1:ncol(temp_ds))){\n    series[[i]]=list(name=gsub(pattern = paste0(\"f\",inp_var,\"_\"),\n                               replacement = \"\",\n                               fixed = TRUE,\n                               x = variable_name[i]),\n                     color=palette_temp[i],\n                     data=pull(temp_ds,i))\n  }\n  return(series)\n}",
    "created" : 1528540687920.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4125913612",
    "id" : "72FF90A8",
    "lastKnownWriteTime" : 1528617257,
    "last_content_update" : 1528617257138,
    "path" : "C:/Users/Bar Yokhai/Desktop/projets/Blog/luc_ingenieur_app/dashboardapp/config.R",
    "project_path" : "config.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}